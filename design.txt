Who is the target for this design, e.g., are you assuming any knowledge on the
part of the language users?

	Beginner Programmers: Assuming they understand loops and states.

Why did you choose this design, i.e., why did you think it would be a good idea
for users to express the maze-searching computation using this syntax?

	A bit more readable, but also still gets the same goal of teaching loops and states.
	Same number of rules, just more organized and clear.


What behaviors are easier to express in your design than in Picobot’s original
design?  If there are no such behaviors, why not?

        All of them are easier to express. The syntax alone makes it obvious
        what each input means/does.

What behaviors are more difficult to express in your design than in Picobot’s
original design? If there are no such behaviors, why not?

        Ideally, nothing would be more difficult. Same functionality in the end,
        just more readable.

On a scale of 1–10 (where 10 is “very different”), how different is your syntax
from PicoBot’s original design?

	4: For every line of picobot code, there exists an equivalent line of code for our
	implementation, so it's not too different.

Is there anything you don’t like about your design?

	Makes the code more verbose. Overall file will be longer, doesn't add any
	power to individual rules. You'd basically be writing Picobot code in this
	implementation with syntactic sugar.

